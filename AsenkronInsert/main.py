import clickhouse_connect
import random
import numpy
import multiprocessing


def insert_data(client, data):
    client.insert('taxonomy_object_firewalls', data, column_names=["AccessGranted", "AccessProperties", "AccessRequested", "ExtraField5", "Action_id",
                            "ActionTaken", "Additional_information", "AlertActivityType", "AuthPackage",
                            "CallerGroup",
                            "CallerMachine",
                            "CallerName",
                            "Category",
                            "ChangeDetails",
                            "ChangeType",
                            "Class_type",
                            "NodeIP",
                            "ConnectionName",
                            "ExtraField6",
                            "Database_name",
                            "Database_principal_id",
                            "Database_principal_name",
                            "Description",
                            "DestinationAccount",
                            "DestinationAccountType",
                            "DestinationDomain",
                            "ExtraField7",
                            "ExtraField8",
                            "ExtraField9",
                            "DestinationMACAddress",
                            "DestinationMachine",
                            "DestinationPort",
                            "Detail",
                            "Direction",
                            "DomainMember",
                            "DOCID",
                            "DST_CNTRY",
                            "DSTNAME",
                            "Duration",
                            "EventInfo",
                            "EventMessage",
                            "ExtraField1",
                            "ExtraneousInfo",
                            "FrequencyScore",
                            "ExtraField4",
                            "Count",
                            "ExtraField10",
                            "FailureReason",
                            "FeaturePackage",
                            "FileHandleID",
                            "FileName",
                            "AlexaIndex",
                            "ExtraField2",
                            "FROM_EMAIL", "Gateway", "GroupMember", "GroupName", "GroupType", "ImageFile",
                            "InfectedObject", "InfoMessage", "InformationName", "InstallOperation", "Interface",
                            "Is_column_permission", "L3PROTOCOL", "LinkName", "ExtraField11", "LogFile", "LOGIN_ID",
                            "LOGONTYPE", "MAIL_APP", "ID", "MEMBER_NAME", "MESSAGE", "METHOD", "Mode", "Modification",
                            "ModificationType", "MSGID", "Name", "NUMBER_ATTACHMENTS", "ObjectHandleID", "ObjectName",
                            "ObjectServer", "ObjectType", "OldVersion", "OperationID", "OperationType", "Parameters",
                            "ParentPID", "PAGESPRINTED", "UserAgent", "Permission_bitmask", "PolicyName",
                            "PrimaryActionAttempt", "PRINTER", "PrivilegesExercised", "PrivilegesUsed", "ProcessID",
                            "Protocol", "PROTOCOLGRP", "QUERY", "queryresponse", "questintype", "questintype_parsed",
                            "RecordNumber", "REFERER", "RELATIVE_PATH", "REMOTEHOST", "ExtraField3", "RESOURCE",
                            "RESULT_CODE", "RETURNCODE", "RCVD", "RELAY", "SITENAME", "REASON", "DomainCreationDate",
                            "Rule", "Schema_name", "ScanMessage", "ScanType", "SecondaryActionAttempt",
                            "Send_Receive_indicator", "SENT", "Server_instance_name", "Server_principal_id",
                            "Server_principal_name", "Server_principal_sid", "ServiceName",

                            "ServingProcess", "SESSIONID", "Severity", "Session_server_principal_name",
                            "Sequence_number", "SoftwareDate", "SoftwarePackage", "SoftwareSource", "SourceAccount",
                            "SourceDomain", "SourceLogonID", "SourceMACAddress", "SourceMachine", "SourcePort", "Score",
                            "Threshold", "SPAMRULES", "SRC_CNTRY", "SrcName", "StartMessage", "Statement", "STATUSCODE",
                            "StatusLevel", "StatusMessage", "StopCondition", "StopMessage", "subtype_desc",
                            "TargetMachineList", "Target_database_principal_id", "Target_server_principal_id",
                            "Target_server_principal_name", "Target_server_principal_sid",
                            "Target_database_principal_name", "TrojanName", "UniqueID", "URL", "User_defined_event_id",
                            "User_defined_information", "USERID", "USERHOST", "Version", "WEB_SERVER_NAME",
                            "WEB_SERVER_PORT", "WEB_SERVER_IP", "WEB_SERVER_SRC_PORT", "VirusDetected", "VirusName",
                            "VMDISKLIB", "VMNAME", "VPN", "WarningMessage", "EventCode", "WIN_STATUS", "TAXONOMY",
                            "TIME1", "TRAN_IP", "TRAN_PORT", "TO_EMAIL", "SyslogSenderIP", "FILE", "TAG1", "TAG2",
                            "TAG3", "TYPE", "User_Groups", "LOGTYPE", "LOGSUBTYPE", "LOGSUBTYPE1", "RAWLOG",
                            "DayOfWeek", "ThreatIntelligenceURL", "ThreatIntelligenceTaxonomy",
                            "ThreatIntelligenceAdditional", "Year", "Month", "Day", "Hour", "Minute", "Second",
                            "RCVD_PKT", "SENT_PKT"])

def generate_data():
    fakewords = ["vpn", "log", "security", "blank", "calling", "internet", "python", "java", "mssql", "clickhouse",
             "oracle","various","bruteforce","ddos","chart","truva","trojan","resident" ]
    fakewords1 = ["mysql", "generator", "iterator", "syntax", "authentication failure", "SSL", "TLS", "Time", "ındex", ]
    fakewords2 = ["failed logins ", "security policy", "rootkit", "suspiciousfilemodification", "Virus", "security", "log",
                  "keylogger", "string","reload","betaversion","avira","mcafee","ıntel"]
    fakewords3 = ["local", "injection", "server", "Malware", "Access", "report", "created", "network", "quarantined",
                  "shutdown", "textbox","shutdown","asp.net","format","repistory""pull","push"]
    fakewords4 = ["selected", "event", "domain", "session", "ıd", "framework", "mysql", "exfiltration", "download", "for",
                  "hire", "bigdata","inheritence","abstraction","polymorphism","chipsecurity"]
    true = ["True", "False"]

    for i in range(100000000):
        row = [random.choice(true), random.choice(fakewords), random.choice(fakewords),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords1),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.randint(1, 65535),
           random.choice(fakewords1),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords1),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.uniform(10.5, 75.5),
           random.choice(fakewords),
           random.choice(fakewords1),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.uniform(10.5, 75.5),
           random.choice(fakewords2),
           random.randint(1, 65535),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.randint(1, 65535),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords4),
           random.choice(fakewords4),
           random.choice(fakewords4),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords1),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords1),
           random.choice(fakewords1),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords1),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords2),
           random.randint(1, 465535),
           random.choice(fakewords),
           random.randint(1, 65535),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords1),
           random.randint(1, 655350),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords4),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords),
           random.randint(1000, 9999),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords),
           random.uniform(10.5, 75.5),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords1),
           random.randint(1000, 9999),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords3),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.uniform(10.5, 75.5),
           random.choice(fakewords),
           random.randint(1, 905535),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.randint(1, 665535),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords1),
           random.choice(fakewords4),
           random.choice(fakewords),
           random.randint(100, 599),
           random.randint(100, 900),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords),
           random.choice(fakewords),
           random.randint(1, 65535),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.randint(1, 65535),
           random.randint(1, 65535),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.uniform(10.5, 75.5),
           random.randint(100, 599),
           random.choice(fakewords3),
           random.randint(2000, 2023),
           random.choice(fakewords4),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords2),
           random.choice(fakewords3),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords1),
           random.choice(fakewords),
           random.choice(fakewords),
           random.choice(fakewords3),
           random.choice(fakewords4),
           random.randint(1, 65535),
           random.choice(fakewords3),
           random.choice(fakewords2),
           random.choice(fakewords2),
           random.randint(1, 65535),
           random.randint(0, 59),
           random.randint(0, 59),
           random.randint(0, 59),
           random.randint(0, 59),
           random.randint(0, 59),
           random.uniform(10.5, 75.5),
           random.uniform(10.5, 75.5),
               ]
        yield row


def main():
    client = clickhouse_connect.get_client(host='', username='', password='')
    data_generator = generate_data()
    pool = multiprocessing.Pool(processes=5)
    for i in range(20000):
        data = [next(data_generator) for _ in range(10000)]
        pool.apply_async(insert_data, args=(client, data))
    pool.close()
    pool.join()


if __name__ == '__main__':
    multiprocessing.freeze_support()
    main()
